{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1252,"sourceType":"datasetVersion","datasetId":655},{"sourceId":3919,"sourceType":"datasetVersion","datasetId":2321},{"sourceId":4877,"sourceType":"datasetVersion","datasetId":2894},{"sourceId":5624,"sourceType":"datasetVersion","datasetId":3491},{"sourceId":8172,"sourceType":"datasetVersion","datasetId":1442},{"sourceId":13206,"sourceType":"datasetVersion","datasetId":9366},{"sourceId":403916,"sourceType":"datasetVersion","datasetId":179555},{"sourceId":466349,"sourceType":"datasetVersion","datasetId":4549},{"sourceId":1151655,"sourceType":"datasetVersion","datasetId":2478},{"sourceId":5438389,"sourceType":"datasetVersion","datasetId":10128}],"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"**This notebook is an exercise in the [Pandas](https://www.kaggle.com/learn/pandas) course.  You can reference the tutorial at [this link](https://www.kaggle.com/residentmario/summary-functions-and-maps).**\n\n---\n","metadata":{}},{"cell_type":"markdown","source":"# Introduction\n\nNow you are ready to get a deeper understanding of your data.\n\nRun the following cell to load your data and some utility functions (including code to check your answers).","metadata":{}},{"cell_type":"code","source":"import pandas as pd\npd.set_option(\"display.max_rows\", 5)\nreviews = pd.read_csv(\"../input/wine-reviews/winemag-data-130k-v2.csv\", index_col=0)\n\nfrom learntools.core import binder; binder.bind(globals())\nfrom learntools.pandas.summary_functions_and_maps import *\nprint(\"Setup complete.\")\n\nreviews[reviews[\"country\"] == \"Canada\"]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:53.183051Z","iopub.execute_input":"2025-06-11T09:01:53.183362Z","iopub.status.idle":"2025-06-11T09:01:54.492399Z","shell.execute_reply.started":"2025-06-11T09:01:53.183343Z","shell.execute_reply":"2025-06-11T09:01:54.491612Z"}},"outputs":[{"name":"stdout","text":"Setup complete.\n","output_type":"stream"},{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"       country                                        description  \\\n454     Canada  An aromatic knockout with notes of peach, papa...   \n2616    Canada  A slightly earthy, spicy nose leads, followed ...   \n...        ...                                                ...   \n129528  Canada  A delicious though somewhat reserved wine with...   \n129581  Canada  Smooth and engaging, this offers classic varie...   \n\n            designation  points  price          province             region_1  \\\n454     Reserve Icewine      92   30.0           Ontario  Niagara-On-The-Lake   \n2616             Fusion      83   12.0           Ontario    Niagara Peninsula   \n...                 ...     ...    ...               ...                  ...   \n129528          Icewine      89   45.0           Ontario    Niagara Peninsula   \n129581              NaN      90   38.0  British Columbia      Okanagan Valley   \n\n       region_2       taster_name taster_twitter_handle  \\\n454         NaN  Sean P. Sullivan         @wawinereport   \n2616        NaN   Susan Kostrzewa         @suskostrzewa   \n...         ...               ...                   ...   \n129528      NaN  Sean P. Sullivan         @wawinereport   \n129581      NaN      Paul Gregutt           @paulgwine    \n\n                                                    title  \\\n454     Pillitteri 2012 Reserve Icewine Vidal (Niagara...   \n2616    Pillitteri 2004 Fusion Gewürztraminer-Riesling...   \n...                                                   ...   \n129528  Henry of Pelham 2011 Icewine Vidal (Niagara Pe...   \n129581         Burrowing Owl 2013 Syrah (Okanagan Valley)   \n\n                        variety           winery  \n454                       Vidal       Pillitteri  \n2616    Gewürztraminer-Riesling       Pillitteri  \n...                         ...              ...  \n129528                    Vidal  Henry of Pelham  \n129581                    Syrah    Burrowing Owl  \n\n[257 rows x 13 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>description</th>\n      <th>designation</th>\n      <th>points</th>\n      <th>price</th>\n      <th>province</th>\n      <th>region_1</th>\n      <th>region_2</th>\n      <th>taster_name</th>\n      <th>taster_twitter_handle</th>\n      <th>title</th>\n      <th>variety</th>\n      <th>winery</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>454</th>\n      <td>Canada</td>\n      <td>An aromatic knockout with notes of peach, papa...</td>\n      <td>Reserve Icewine</td>\n      <td>92</td>\n      <td>30.0</td>\n      <td>Ontario</td>\n      <td>Niagara-On-The-Lake</td>\n      <td>NaN</td>\n      <td>Sean P. Sullivan</td>\n      <td>@wawinereport</td>\n      <td>Pillitteri 2012 Reserve Icewine Vidal (Niagara...</td>\n      <td>Vidal</td>\n      <td>Pillitteri</td>\n    </tr>\n    <tr>\n      <th>2616</th>\n      <td>Canada</td>\n      <td>A slightly earthy, spicy nose leads, followed ...</td>\n      <td>Fusion</td>\n      <td>83</td>\n      <td>12.0</td>\n      <td>Ontario</td>\n      <td>Niagara Peninsula</td>\n      <td>NaN</td>\n      <td>Susan Kostrzewa</td>\n      <td>@suskostrzewa</td>\n      <td>Pillitteri 2004 Fusion Gewürztraminer-Riesling...</td>\n      <td>Gewürztraminer-Riesling</td>\n      <td>Pillitteri</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>129528</th>\n      <td>Canada</td>\n      <td>A delicious though somewhat reserved wine with...</td>\n      <td>Icewine</td>\n      <td>89</td>\n      <td>45.0</td>\n      <td>Ontario</td>\n      <td>Niagara Peninsula</td>\n      <td>NaN</td>\n      <td>Sean P. Sullivan</td>\n      <td>@wawinereport</td>\n      <td>Henry of Pelham 2011 Icewine Vidal (Niagara Pe...</td>\n      <td>Vidal</td>\n      <td>Henry of Pelham</td>\n    </tr>\n    <tr>\n      <th>129581</th>\n      <td>Canada</td>\n      <td>Smooth and engaging, this offers classic varie...</td>\n      <td>NaN</td>\n      <td>90</td>\n      <td>38.0</td>\n      <td>British Columbia</td>\n      <td>Okanagan Valley</td>\n      <td>NaN</td>\n      <td>Paul Gregutt</td>\n      <td>@paulgwine</td>\n      <td>Burrowing Owl 2013 Syrah (Okanagan Valley)</td>\n      <td>Syrah</td>\n      <td>Burrowing Owl</td>\n    </tr>\n  </tbody>\n</table>\n<p>257 rows × 13 columns</p>\n</div>"},"metadata":{}}],"execution_count":51},{"cell_type":"markdown","source":"# Exercises","metadata":{}},{"cell_type":"markdown","source":"## 1.\n\nWhat is the median of the `points` column in the `reviews` DataFrame?","metadata":{}},{"cell_type":"code","source":"median_points = reviews[\"points\"].median()\n\n# Check your answer\nq1.check()\nmedian_points","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.494169Z","iopub.execute_input":"2025-06-11T09:01:54.495356Z","iopub.status.idle":"2025-06-11T09:01:54.505917Z","shell.execute_reply.started":"2025-06-11T09:01:54.495327Z","shell.execute_reply":"2025-06-11T09:01:54.504447Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.14285714285714285, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"1_MedianPoints\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}},{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"88.0"},"metadata":{}}],"execution_count":52},{"cell_type":"code","source":"#q1.hint()\n#q1.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.507015Z","iopub.execute_input":"2025-06-11T09:01:54.507315Z","iopub.status.idle":"2025-06-11T09:01:54.519082Z","shell.execute_reply.started":"2025-06-11T09:01:54.507285Z","shell.execute_reply":"2025-06-11T09:01:54.518037Z"}},"outputs":[],"execution_count":53},{"cell_type":"markdown","source":"## 2. \nWhat countries are represented in the dataset? (Your answer should not include any duplicates.)","metadata":{}},{"cell_type":"code","source":"countries = reviews[\"country\"].drop_duplicates()\n\n# Check your answer\nq2.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.521585Z","iopub.execute_input":"2025-06-11T09:01:54.521900Z","iopub.status.idle":"2025-06-11T09:01:54.552104Z","shell.execute_reply.started":"2025-06-11T09:01:54.521869Z","shell.execute_reply":"2025-06-11T09:01:54.551079Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.14285714285714285, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"2_UniqueCountries\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":54},{"cell_type":"code","source":"#q2.hint()\n#q2.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.553308Z","iopub.execute_input":"2025-06-11T09:01:54.553660Z","iopub.status.idle":"2025-06-11T09:01:54.569519Z","shell.execute_reply.started":"2025-06-11T09:01:54.553579Z","shell.execute_reply":"2025-06-11T09:01:54.568273Z"}},"outputs":[],"execution_count":55},{"cell_type":"markdown","source":"## 3.\nHow often does each country appear in the dataset? Create a Series `reviews_per_country` mapping countries to the count of reviews of wines from that country.","metadata":{}},{"cell_type":"code","source":"reviews_per_country = reviews[\"country\"].value_counts()\n\n# Check your answer\nq3.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.570778Z","iopub.execute_input":"2025-06-11T09:01:54.571157Z","iopub.status.idle":"2025-06-11T09:01:54.605989Z","shell.execute_reply.started":"2025-06-11T09:01:54.571132Z","shell.execute_reply":"2025-06-11T09:01:54.605149Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.14285714285714285, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"3_ReviewsPerCountry\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":56},{"cell_type":"code","source":"#q3.hint()\n#q3.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.606807Z","iopub.execute_input":"2025-06-11T09:01:54.607023Z","iopub.status.idle":"2025-06-11T09:01:54.622850Z","shell.execute_reply.started":"2025-06-11T09:01:54.607005Z","shell.execute_reply":"2025-06-11T09:01:54.621917Z"}},"outputs":[],"execution_count":57},{"cell_type":"markdown","source":"## 4.\nCreate variable `centered_price` containing a version of the `price` column with the mean price subtracted.\n\n(Note: this 'centering' transformation is a common preprocessing step before applying various machine learning algorithms.) ","metadata":{}},{"cell_type":"code","source":"centered_price = reviews[\"price\"] - reviews[\"price\"].mean()\n\n# Check your answer\nq4.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.623962Z","iopub.execute_input":"2025-06-11T09:01:54.624287Z","iopub.status.idle":"2025-06-11T09:01:54.650438Z","shell.execute_reply.started":"2025-06-11T09:01:54.624260Z","shell.execute_reply":"2025-06-11T09:01:54.649663Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.14285714285714285, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"4_CenteredPrice\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":58},{"cell_type":"code","source":"#q4.hint()\n#q4.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.651657Z","iopub.execute_input":"2025-06-11T09:01:54.651980Z","iopub.status.idle":"2025-06-11T09:01:54.664991Z","shell.execute_reply.started":"2025-06-11T09:01:54.651954Z","shell.execute_reply":"2025-06-11T09:01:54.664030Z"}},"outputs":[],"execution_count":59},{"cell_type":"markdown","source":"## 5.\nI'm an economical wine buyer. Which wine is the \"best bargain\"? Create a variable `bargain_wine` with the title of the wine with the highest points-to-price ratio in the dataset.","metadata":{}},{"cell_type":"code","source":"bargain_wine = reviews.iloc[(reviews[\"points\"] / reviews[\"price\"]).idxmax()][\"title\"]\n\n# Check your answer\nq5.check()\nbargain_wine","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.667694Z","iopub.execute_input":"2025-06-11T09:01:54.667946Z","iopub.status.idle":"2025-06-11T09:01:54.693190Z","shell.execute_reply.started":"2025-06-11T09:01:54.667925Z","shell.execute_reply":"2025-06-11T09:01:54.692113Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.14285714285714285, \"interactionType\": 1, \"questionType\": 2, \"questionId\": \"5_BargainWine\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}},{"execution_count":60,"output_type":"execute_result","data":{"text/plain":"'Bandit NV Merlot (California)'"},"metadata":{}}],"execution_count":60},{"cell_type":"code","source":"#q5.hint()\n#q5.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.694277Z","iopub.execute_input":"2025-06-11T09:01:54.694603Z","iopub.status.idle":"2025-06-11T09:01:54.707093Z","shell.execute_reply.started":"2025-06-11T09:01:54.694573Z","shell.execute_reply":"2025-06-11T09:01:54.706139Z"}},"outputs":[],"execution_count":61},{"cell_type":"markdown","source":"## 6.\nThere are only so many words you can use when describing a bottle of wine. Is a wine more likely to be \"tropical\" or \"fruity\"? Create a Series `descriptor_counts` counting how many times each of these two words appears in the `description` column in the dataset. (For simplicity, let's ignore the capitalized versions of these words.)","metadata":{}},{"cell_type":"code","source":"n_trop = reviews.description.map(lambda desc: \"tropical\" in desc).sum()\nn_fruity = reviews.description.map(lambda desc: \"fruity\" in desc).sum()\ndescriptor_counts = pd.Series([n_trop, n_fruity], index=['tropical', 'fruity'])\n\n# Check your answer\nq6.check()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.708269Z","iopub.execute_input":"2025-06-11T09:01:54.708734Z","iopub.status.idle":"2025-06-11T09:01:54.855632Z","shell.execute_reply.started":"2025-06-11T09:01:54.708700Z","shell.execute_reply":"2025-06-11T09:01:54.854767Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.14285714285714285, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"6_DescriptorCounts\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":62},{"cell_type":"code","source":"# q6.hint()\n# q6.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.856352Z","iopub.execute_input":"2025-06-11T09:01:54.856678Z","iopub.status.idle":"2025-06-11T09:01:54.861267Z","shell.execute_reply.started":"2025-06-11T09:01:54.856655Z","shell.execute_reply":"2025-06-11T09:01:54.859996Z"}},"outputs":[],"execution_count":63},{"cell_type":"markdown","source":"## 7.\nWe'd like to host these wine reviews on our website, but a rating system ranging from 80 to 100 points is too hard to understand - we'd like to translate them into simple star ratings. A score of 95 or higher counts as 3 stars, a score of at least 85 but less than 95 is 2 stars. Any other score is 1 star.\n\nAlso, the Canadian Vintners Association bought a lot of ads on the site, so any wines from Canada should automatically get 3 stars, regardless of points.\n\nCreate a series `star_ratings` with the number of stars corresponding to each review in the dataset.","metadata":{}},{"cell_type":"code","source":"star_ratings = reviews.apply(lambda row: 3 if (row[\"points\"] >= 95 or row[\"country\"] == \"Canada\") else (2 if row[\"points\"] >= 85 else 1), axis=1)\n\n# Check your answer\nq7.check()\nstar_ratings","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:54.862233Z","iopub.execute_input":"2025-06-11T09:01:54.862518Z","iopub.status.idle":"2025-06-11T09:01:56.049362Z","shell.execute_reply.started":"2025-06-11T09:01:54.862496Z","shell.execute_reply":"2025-06-11T09:01:56.048702Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.14285714285714285, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"7_StarRatings\", \"learnToolsVersion\": \"0.3.5\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}},{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"0         2\n1         2\n         ..\n129969    2\n129970    2\nLength: 129971, dtype: int64"},"metadata":{}}],"execution_count":64},{"cell_type":"code","source":"# q7.hint()\n#q7.solution()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-06-11T09:01:56.050571Z","iopub.execute_input":"2025-06-11T09:01:56.051234Z","iopub.status.idle":"2025-06-11T09:01:56.055971Z","shell.execute_reply.started":"2025-06-11T09:01:56.051198Z","shell.execute_reply":"2025-06-11T09:01:56.055072Z"}},"outputs":[],"execution_count":65},{"cell_type":"markdown","source":"# Keep going\nContinue to **[grouping and sorting](https://www.kaggle.com/residentmario/grouping-and-sorting)**.","metadata":{}},{"cell_type":"markdown","source":"---\n\n\n\n\n*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/pandas/discussion) to chat with other learners.*","metadata":{}}]}